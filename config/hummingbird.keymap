/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define             _BASE    0
#define             _NAV     1
#define             _MEDIA   2
#define             _NUM     3
#define             _SYM     4
#define             _FUN     5

#define VOL_U       &kp C_VOL_UP
#define VOL_D       &kp C_VOL_DN
#define PB          &kp PAUSE_BREAK

#define BT0         &bt BT_SEL 0
#define BT1         &bt BT_SEL 1
#define BT2         &bt BT_SEL 2
#define BT3         &bt BT_SEL 3

#define SPC_SYM     &lt _SYM   SPC
#define V_MED       &lt _MEDIA V
#define ESC_MED     &lt _MEDIA ESC
#define B_NAV       &lt _NAV   B
#define BSPC_NAV    &lt _NAV   BSPC
#define K_SYM       &lt _SYM   K
#define M_NUM       &lt _NUM   M
#define RET_NUM     &lt _NUM   RET
#define COMMA_FUN   &lt _FUN   COMMA

#define A_GUI       &hm LGUI  A
#define R_ALT       &hm LALT  R
#define S_CTRL      &hm LCTRL S
#define T_SHFT      &hm LSHFT T

#define N_SHFT      &hm RSHFT N
#define E_CTRL      &hm RCTRL E
#define I_ALT       &hm RALT  I
#define O_GUI       &hm RGUI  O

&kscan0 {
    debounce-period  = <12>;
};

&mt {
    tapping-term-ms = <185>;
    quick-tap-ms = <185>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <185>;
    quick-tap-ms = <185>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

/ { 

        combos {
            compatible = "zmk,combos";

            combo_esc {
                timeout-ms = <20>;
                key-positions = <11 12>;
                bindings = <&kp ESC>;
                layers = <0 1 2 3 4 5>;
            };

            combo_tab {
                timeout-ms = <20>;
                key-positions = <12 13>;
                bindings = <&kp TAB>;
                layers = <0 1 2 3 4 5>;
            };

            combo_ret {
                timeout-ms = <20>;
                key-positions = <17 18>;
                bindings = <&kp RET>;
                layers = <0 1 2 3 4 5>;
            };
            
            combo_caps_word {
                timeout-ms = <20>;
                key-positions = <21 22>;
                bindings = <&caps_word>;
                layers = <0 1 2 3 4 5>;
            };
            
            combo_fun {
                timeout-ms = <20>;
                key-positions = <31 32>;
                bindings = <&mo _FUN>;
                layers = <0 1 2 3 4 5>;
            };
            
            combo_k {
                timeout-ms = <20>;
                key-positions = <16 28>;
                bindings = <&kp K>;
                layers = <0 1 2 3 4 5>;
                slow-release;
            };
            
            combo_k_new {
                timeout-ms = <20>;
                key-positions = <15 16>;
                bindings = <&kp K>;
                layers = <0>;
                slow-release;
            };

            combo_z {
                timeout-ms = <20>;
                key-positions = <10 11>;
                bindings = <&kp Z>;
                layers = <0>;
            };
            
            // Slash position combos
            combo_slash {
                timeout-ms = <20>;
                key-positions = <18 19>;
                bindings = <&kp SLASH>;
                layers = <0>;
            };
            combo_bt3 {
                timeout-ms = <20>;
                key-positions = <18 19>;
                bindings = <&bt BT_SEL 3>;
                layers = <0>;
            };


            // B position combos
            combo_b {
                timeout-ms = <20>;
                key-positions = <13 27>;
                bindings = <&kp B>;
                layers = <0>;
                slow-release;
            };
            combo_b_minus {
                timeout-ms = <20>;
                key-positions = <13 27>;
                bindings = <&kp MINUS>;
                layers = <3>;
            };
            combo_b_underscore {
                timeout-ms = <20>;
                key-positions = <13 27>;
                bindings = <&kp UNDER>;
                layers = <4>;
            };
            
            combo_new_b {
                timeout-ms = <20>;
                key-positions = <13 14>;
                bindings = <&kp B>;
                layers = <0>;
                slow-release;
            };
            combo_new_b_minus {
                timeout-ms = <20>;
                key-positions = <13 14>;
                bindings = <&kp MINUS>;
                layers = <3>;
            };
            combo_new_b_underscore {
                timeout-ms = <20>;
                key-positions = <13 14>;
                bindings = <&kp UNDER>;
                layers = <4>;
            };
        };
    
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <220>;
                quick-tap-ms = <20>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
            compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
            &kp Q       &kp W       &kp F       &kp P       &kp G       /**/ /**/       &kp J       &kp L       &kp U       &kp Y       &kp SQT
            A_GUI       R_ALT       S_CTRL      T_SHFT      &kp D 	    /**/ /**/	    &kp H       N_SHFT      E_CTRL      I_ALT       O_GUI
            /*z*/       &kp X       &kp C       V_MED       /*b*/       /**/ /**/       /*k*/       M_NUM       COMMA_FUN   &kp DOT     /*SLASH*/
                                                ESC_MED     BSPC_NAV                    SPC_SYM     RET_NUM
		>;
		};

       		nav {
		bindings = <
            &none       &none       &none       &none       &none       /**/ /**/       &none       &none       &none       &none       &none  
            &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none       /**/ /**/       &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp CAPS
                        &none       &none       &none                   /**/ /**/                   &none       &trans      &none
                                                &none       &none                       &none       &none
		>;
		};
		
            media {
		bindings = <
            &none       &none       &none       &none       &none       /**/ /**/  	    &none       &none       &none       &none       &none  
            &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none       /**/ /**/       &kp C_PP    VOL_D       VOL_U       &kp C_PREV  &none
                        &none       &none       &none                   /**/ /**/                   BT0         BT1         BT2         /*BT3*/
                                                &none       &none                       &none       &none
		>;
		};	
		
            num {
		bindings = <
            &kp LBKT    &kp N7      &kp N8      &kp N9      &kp RBKT    /**/ /**/  	    &none       &none       &none       &none       &none 
            &kp SEMI    &kp N4      &kp N5      &kp N6      &kp EQUAL   /**/ /**/       &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
            /*`*/       &kp N1      &kp N2      &kp N3      /*BSLH*/    /**/ /**/                   &none       &kp DOT     &kp MINUS
                                                &kp N0      &kp DOT                     &none       &none
		>;
		};	
		
            sym {
		bindings = <
            &kp LBRC    &kp AMPS    &kp STAR    &kp LPAR    &kp RBRC    /**/ /**/       &kp RPAR    &kp LPAR    &kp RPAR    &none       &none 
            &kp COLON   &kp DLLR    &kp PERCENT &kp CARET   &kp PLUS    /**/ /**/       &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
            /*~*/       &kp EXCL    &kp AT      &kp HASH    /*PIPE*/    /**/ /**/       &none       &kp UNDER   &none
                                                &kp RPAR    &kp UNDER                   &none       &none
		>;
		};	

            fun {
		bindings = <
            &kp F12     &kp F7      &kp F8      &kp F9      &kp PSCRN   /**/ /**/	    &none       &none       &none       &none       &none 
            &kp F11     &kp F4      &kp F5      &kp F6      &kp SLCK    /**/ /**/       &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
            /*F10*/     &kp F1      &kp F2      &kp F3      /*PB*/      /**/ /**/                   &none       &none       &none
                                                &none       &none                       &none       &none
		>;
		};	
		
	};
};
